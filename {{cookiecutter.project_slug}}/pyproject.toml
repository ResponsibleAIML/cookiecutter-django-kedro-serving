# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = [
    "tests.py",
    "test_*.py",
]
{%- if cookiecutter.frontend_pipeline == 'Gulp' %}
norecursedirs = ["node_modules"]
{%- endif %}

# ==== Coverage ====
[tool.coverage.run]
include = ["{{cookiecutter.project_slug}}/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 120
target-version = ['py39']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 120
known_first_party = [
    "{{cookiecutter.project_slug}}",
    "config",
]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== flake8 ====
[tool.flake8]
max-line-length = 120
exclude = [".tox",".git","*/migrations/*","*/static/CACHE/*","docs","node_modules","venv",".venv"]


# ==== mypy ====
[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
{%- if cookiecutter.use_drf == "y" %}
    "mypy_drf_plugin.main",
{%- endif %}
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
{%- if cookiecutter.use_celery == "y" %}
    "pylint_celery",
{%- endif %}
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.email}}>"]
readme = "README.md"
packages = [{include = "{{cookiecutter.project_slug}}"}]

[tool.poetry.dependencies]
python = "^3.9"
python-slugify = "^8.0.1"
pillow = "^9.5.0"
argon2-cffi = "^21.3.0"
{%- if cookiecutter.use_whitenoise == "y" %}
whitenoise = "^6.5.0"
{%- endif %}
{%- if cookiecutter.use_celery == "y" %}
celery = "^5.3.1"
django-celery-beat = "^2.5.0"
redis = "^4.5.5"
{%- endif %}
django = "^4.2.2"
django-environ = "^0.10.0"
django-model-utils = "^4.3.1"
django-allauth = "^0.54.0"
django-crispy-forms = "^2.0"
crispy-bootstrap5 = "^0.7"
django-redis = "^5.3.0"

{%- if cookiecutter.use_drf == 'y' %}
djangorestframework = "^3.14.0"
django-cors-headers = "^4.1.0"
drf-spectacular = "^0.26.2"
{%- endif %}

{%- if cookiecutter.frontend_pipeline == 'Webpack' %}
django-webpack-loader = "^2.0.1"
{%- endif %}
{%- if cookiecutter.frontend_pipeline == 'Django Compressor' %}
django-compressor  = "^4.3.1"
{%- endif %}
{%- if cookiecutter.use_async == 'y' %}
uvicorn = {extras = ["standard"], version = "^0.22.0"}
{%- endif %}
gunicorn = {version = "^20.1.0", extras = ["production"]}
{%- if cookiecutter.use_sentry == "y" %}
sentry-sdk = {version = "^1.25.1", extras = ["production"]}
{%- endif %}
hiredis = {version = "^2.2.3", extras = ["production"]}
django-anymail = {version = "^10.0", extras = ["production"]}
kedro = {version = ">=0.18.10,<0.19.0", python = ">=3.9,<3.11"}
kedro-datasets = {version = ">=1.4.1,<2.0.0", python = ">=3.9,<3.11"}
kedro-airflow = {version = ">=0.5.1", python = ">=3.9,<3.11"}
kedro-mlflow = {version = ">=0.11.4,<0.12.0", python = ">=3.9,<3.11"}
kedro-viz = {version = ">=6.3.0", python = ">=3.9,<3.11"}


[tool.poetry.group.dev.dependencies]
werkzeug = {extras = ["watchdog"], version = "^2.3.6"}
ipdb = "^0.13.13"
psycopg2-binary = "^2.9.6"
watchfiles = "^0.19.0"
mypy = "^1.3.0"
django-stubs = "^4.2.1"
pytest = "^7.3.2"
pytest-xdist = "^3.3.1"
pytest-mock = "^3.6.1"
pytest-sugar = "^0.9.7"
djangorestframework-stubs = "^3.14.1"
sphinx = "^7.0.1"
sphinx-autobuild = "^2021.3.14"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
coverage = "^7.2.7"
black = "^23.3.0"
pylint-django = "^2.5.3"
pylint-celery = "^0.3"
pre-commit = "^3.3.3"
factory-boy = "^3.2.1"
django-debug-toolbar = "^4.1.0"
django-extensions = "^3.2.3"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
